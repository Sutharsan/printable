<?php

/**
 * @file
 * Provides printer friendly content entities.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Template\Attribute;
use Drupal\entity\Entity\EntityDisplay;
use Symfony\Cmf\Component\Routing\RouteObjectInterface;

// Register autoloading of vendor libraries.
$autoload = __DIR__ . '/vendor/autoload.php';
if (file_exists($autoload)) {
  require_once $autoload;
}

/**
 * Implements hook_permission().
 */
function printable_permission() {
  return array(
    'view printer friendly versions' => array(
      'title' => t('View Printer Friendly Versions'),
    ),
    'administer printable' => array(
      'title' => t('Administer Printable'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function printable_theme() {
  $module_path = drupal_get_path('module', 'printable');
  return array(
    'printable_navigation' => array(
      'variables' => array('printable_link' => NULL),
    ),
    'printable' => array(
      'template' => 'printable',
      'pattern' => 'printable__',
      'variables' => array(
        'header' => NULL,
        'content' => NULL,
        'footer' => NULL,
      ),
      'path' => $module_path . '/templates',
    ),
    'printable_header' => array(
      'template' => 'printable-header',
      'pattern' => 'printable_header__',
      'variables' => array(
        'logo_url' => NULL,
      ),
      'path' => $module_path . '/templates',
    ),
    'printable_footer' => array(
      'template' => 'printable-footer',
      'pattern' => 'printable_footer__',
      'variables' => array(
        'footer_content' => NULL,
      ),
      'path' => $module_path . '/templates',
    ),
  );
}

/**
 * Preprocess variables for list of printable printer friendly page.
 *
 * @param array $variables
 *   An associative array containing:
 *   - items: Array of participant names.
 */
function template_preprocess_printable(&$variables) {
  global $base_url;

  $config = \Drupal::config('printable.settings');
  $variables['base_url'] = $base_url . '/' . drupal_get_path('module', 'printable');

  $request = \Drupal::request();
  if ($route = $request->attributes->get(RouteObjectInterface::ROUTE_OBJECT)) {
    $title = \Drupal::service('title_resolver')->getTitle($request, $route);
  }
  $variables['title'] = $title;

  // Use this to render block in twig template, uncomment when need to test
  /*$block = \Drupal\block\Entity\Block::load('printablelinksblockcontent');
  $variables['block_output'] = \Drupal::entityManager()
  ->getViewBuilder('block')
  ->view($block);*/

  // Try this to render views in template, uncomment when need to test.
  // $variables['view_output'] = views_embed_view("comments_recent");
  // HTML element attributes.
  $language_interface = \Drupal::languageManager()->getCurrentLanguage();
  $variables['html_attributes'] = new Attribute(array(
    'lang' => $language_interface->getId(),
    'dir' => $language_interface->getDirection(),
  ));

  if ($config->get('send_to_printer')) {
<<<<<<< HEAD
    $variables['send_script'] = $variables['base_url'] . '/js/script.js';
    if ($config->get('close_window')) {
      $variables['close_script'] = $variables['base_url'] . '/js/close.js';
=======
    $variables['send_script'] = 'printable/js/script.js';
    if ($config->get('close_window')) {
      $variables['close_script'] = 'printable/js/close.js';
    }
  }

  // This answers the question: The blocks I have in the 'content' region are not showing up! Why?.
  $blocks = entity_load_multiple_by_properties('block', array('theme' => \Drupal::theme()->getActiveTheme()->getName(), 'region' => 'sidebar_first'));
  uasort($blocks, 'Drupal\block\Entity\Block::sort');
  $build = array();
  foreach ($blocks as $key => $block) {
    if ($block->access('view')) {
      $build[$key] = entity_view($block, 'block');
>>>>>>> master
    }
  }
  $variables['sidebar_first'] = $build;
}

/**
 * Preprocess variables for list of printable printer friendly page.
 *
 * @param array $variables
 *   An associative array containing:
 *   - items: Array of participant names.
 */
function template_preprocess_printable_footer(&$variables) {
  global $base_url;
  // Create source url over here.
  $source_url = $base_url . \Drupal::service('path.current')->getPath();
  $pos = strpos($source_url, "printable");
  $pos_node = strpos($source_url, '/', $pos + strlen('printable') + 2);
  $source_url = substr($source_url, 0, $pos) . substr($source_url, $pos_node + 1);
  $variables['source_url'] = $source_url;

  // List all the urls over here.
  if (\Drupal::service('config.factory')->get('printable.settings')->get('list_attribute')) {
    $links = $variables['footer_content'];
    $split_links = explode(',', $links);
    $newarray = array_unique($split_links);
    $variables['footer_links'] = $newarray;
  }
}

/**
 * Implements hook_entity_view_mode_alter().
 */
function printable_entity_view_mode_info_alter(&$view_modes) {
  $printable_manager = \Drupal::service('printable.entity_manager');
  foreach ($printable_manager->getPrintableEntities() as $entity_type => $entity_definition) {
    // Add an additional view mode to this entity.
    $view_modes[$entity_type]['printable'] = array(
      'label' => t('Printable'),
      'custom_settings' => FALSE,
      'cache' => TRUE,
    );
  }
}

/**
 * Implements hook_entity_view().
 */
function printable_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode, $langcode) {

  $config = \Drupal::config('printable.settings');
  \Drupal::service('renderer')->addCacheableDependency($build, $config);
  $printable_manager = \Drupal::service('printable.entity_manager');
  $link_builder = \Drupal::service('printable.link_builder');
  if ($printable_manager->isPrintableEntity($entity)) {
    $print_setting = $config->get('printable_print_link_locations');
    $pdf_setting = $config->get('printable_pdf_link_locations');
    // Get the name of entity over here.
    $entity_name = $printable_manager->getEntityName($entity);
<<<<<<< HEAD
    $printable_navigation = array(
=======
    if (in_array($entity_name, $setting)) {
      $printable_navigation = array(
>>>>>>> master
        '#theme' => 'links__entity__printable',
        '#links' => $link_builder->buildLinks($entity),
        '#attributes' => array(
          'class' => array('pre_links'),
        ),
      );
<<<<<<< HEAD
    if (!in_array($entity_name, $print_setting)) {
      unset($printable_navigation['#links']['print']);
    }
    if (!in_array($entity_name, $pdf_setting)) {
      unset($printable_navigation['#links']['pdf']);
=======

      // Add the built links to the entity being rendered.
      $build['printable_navigation'] = array(
        '#markup' => '<strong class="node_view">' . drupal_render($printable_navigation) . '</strong>',
        '#attached' => array(
          'library' => 'printable/entity-links',
        ),
        '#weight' => 100,
        '#cache' => [
        'tags' => $entity->getEntityType()->getListCacheTags(),
        ],
      );
>>>>>>> master
    }
      
    // Add the build links to the entity being rendered.
    $build['printable_navigation'] = array(
      '#markup' => '<strong class="node_view">' . drupal_render($printable_navigation) . '</strong>',
      '#attached' => array(
        'library' => 'printable/entity-links',
      ),
      '#weight' => 100,
      '#cache' => [
      'tags' => $entity->getEntityType()->getListCacheTags(),
      ],
    );
  }
}
